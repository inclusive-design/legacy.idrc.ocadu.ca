<?xml version="1.0" encoding="utf-8"?>
<!-- generator="Joomla! - Open Source Content Management" -->
<feed xmlns="http://www.w3.org/2005/Atom"  xml:lang="en-gb">
	<title type="text">Welcome to the Frontpage</title>
	<subtitle type="text">The IDRC is a research and development centre at OCAD University where an international community of open source developers, designers, researchers, advocates, and volunteers work together to ensure that emerging information technology and practices are designed inclusively.</subtitle>
	<link rel="alternate" type="text/html" href=""/>
	<id>/17-atrc-contact-us/joseph</id>
	<updated>2021-03-15T21:12:33+00:00</updated>
	<author>
		<name>Inclusive Design Research Centre (idrc.ocadu.ca)</name>
		<email>no-reply@idrc.ocadu.ca</email>
	</author>
	<generator uri="https://www.joomla.org">Joomla! - Open Source Content Management</generator>
	<link rel="self" type="application/atom+xml" href="/17-atrc-contact-us/joseph?format=feed&amp;type=atom"/>
	<entry>
		<title>Joey the Clown</title>
		<link rel="alternate" type="text/html" href="/17-atrc-contact-us/joseph/352-joey-the-clown"/>
		<published>2007-06-05T17:48:07+00:00</published>
		<updated>2007-06-05T17:48:07+00:00</updated>
		<id>/17-atrc-contact-us/joseph/352-joey-the-clown</id>
		<author>
			<name>Joseph Scheuhammer</name>
			<email>clown@alum.mit.edu</email>
		</author>
		<category term="Joseph" />
	</entry>
	<entry>
		<title>Biography</title>
		<link rel="alternate" type="text/html" href="/17-atrc-contact-us/joseph/239-biography"/>
		<published>2006-05-25T13:42:21+00:00</published>
		<updated>2006-05-25T13:42:21+00:00</updated>
		<id>/17-atrc-contact-us/joseph/239-biography</id>
		<author>
			<name>Joseph Scheuhammer</name>
			<email>clown@alum.mit.edu</email>
		</author>
		<category term="Joseph" />
	</entry>
	<entry>
		<title>Musings</title>
		<link rel="alternate" type="text/html" href="/17-atrc-contact-us/joseph/164-musings"/>
		<published>2006-04-03T14:33:33+00:00</published>
		<updated>2006-04-03T14:33:33+00:00</updated>
		<id>/17-atrc-contact-us/joseph/164-musings</id>
		<author>
			<name>Joseph Scheuhammer</name>
			<email>clown@alum.mit.edu</email>
		</author>
		<summary type="html">&lt;hr /&gt;
&lt;p&gt;From time to time, I get the urge to flesh out some of my ideas and see where they lead. The collection of documents here is the outcome of scratching that itch. In all honesty, the frequency with which I publish something here is low; but check back to see if there is anything to your fancy.&lt;/p&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;p&gt;Here is a list of links to the documents, and a brief description of each:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.web4all.ca&quot; title=&quot;Web-4-All Smartcard Project&quot;&gt;Web-4-All&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Web-4-All is a project sponsored by Industry Canada, a ministry of the government of Canada. Industry Canada has its own web site describing Web-4-All, but, to me, it describes the web service end of the project more than the client side. The majority of my work on the project has been on the smartcard/work-station end. So, I thought I would write up &lt;a href=&quot;/index.php/component/content/article/42-research-and-development/ongoing-projects/163-web-4-all-smartcard-project&quot; title=&quot;Web-4-All Smartcard Project&quot;&gt;a brief description&lt;/a&gt; of that end of things.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://clown.idrc.ocad.ca/about/musings/FormContent/index.html&quot; title=&quot;Accessibility, Form, and Content&quot;&gt;Accessibility, and Separating Form from Content&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This truly is a musing, in the sense that I wrote it on a whim. Eventually, it was presented at the &lt;a href=&quot;http://www.w3.org/2000/10/DIAWorkshop/statements.html&quot; title=&quot;W3C DIA Workshop - Position Statements and Papers&quot;&gt;W3C's October, 2000 workshop on web device independent authoring &lt;/a&gt;. Gregory Rosmaita presented it on my behalf (thanks again Gregory!).&lt;/p&gt;
&lt;p&gt;On the other hand, this is remarkably old news -- haven't you heard yet? If not, here are the main points of the message:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTML is not a formatting language.&lt;/li&gt;
&lt;li&gt;You should use style sheets to handle formatting.&lt;/li&gt;
&lt;li&gt;If you do, you will make your web pages more accessible.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://clown.idrc.ocad.ca/about/musings/Events/index.html&quot;&gt;Events&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This began as a presentation, on behalf of the ATRC, for one of its corporate partners. The partner wanted an explanation of user interface events and their role. I volunteered to talk about two event systems, namely Java's, and the Macintosh model (by now the Classic Macintosh). I started with the Java event system, and then decided that was enough.&lt;/p&gt;
&lt;p&gt;As I reached the end of my notes on Java events, I noticed a new theme emerging. That theme was that even though events, such as mouse clicks, key presses, and so on, are triggers for some change in the user interface, there is almost always a function that the event calls upon to effect the change. At least this appears to be the case with respect to Java.&lt;/p&gt;
&lt;p&gt;I think this is terribly important from the point of view of accessibility. In the past, and even today in some cases, adaptive technology achieves its goals by simulating events. To be concrete: if users save a document by typing &quot;control-s&quot;, then the adaptive technology achieves the same result by simulating the control-s key press. To be even more concrete: suppose the user employs a voice recognition system as their adaptive technology. The user intones &quot;save document&quot;, and the voice recognition device turns around and simulates the appropriate key press so that save-document functionality is engaged in the word processor it is controlling.&lt;/p&gt;
&lt;p&gt;This is silly -- if the point is to save a document, then invoke the application's save function. Similarly, for other functions of the application. Now, this is not the fault of people who develop adaptive technology. It has worked this way, because, in general, it had to. There was no direct access to an application's functionality.&lt;/p&gt;
&lt;p&gt;This is improving -- witness the Java platform. From a distance, you can think of adaptive technology as a kind of scripting. If applications published their capabilities for outside agents to use, then the agents can direct the application through means other than a mouse and keyboard. The agents no longer simulate events to manage the application. They simply tell the application what to do.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Copyright Â© 2002 Adaptive Technology Resource Centre, University of Toronto.&lt;br /&gt;Verbatim copying and distribution of this entire article is permitted in any medium, provided this notice is preserved.&lt;/p&gt;</summary>
		<content type="html">&lt;hr /&gt;
&lt;p&gt;From time to time, I get the urge to flesh out some of my ideas and see where they lead. The collection of documents here is the outcome of scratching that itch. In all honesty, the frequency with which I publish something here is low; but check back to see if there is anything to your fancy.&lt;/p&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;p&gt;Here is a list of links to the documents, and a brief description of each:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.web4all.ca&quot; title=&quot;Web-4-All Smartcard Project&quot;&gt;Web-4-All&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Web-4-All is a project sponsored by Industry Canada, a ministry of the government of Canada. Industry Canada has its own web site describing Web-4-All, but, to me, it describes the web service end of the project more than the client side. The majority of my work on the project has been on the smartcard/work-station end. So, I thought I would write up &lt;a href=&quot;/index.php/component/content/article/42-research-and-development/ongoing-projects/163-web-4-all-smartcard-project&quot; title=&quot;Web-4-All Smartcard Project&quot;&gt;a brief description&lt;/a&gt; of that end of things.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://clown.idrc.ocad.ca/about/musings/FormContent/index.html&quot; title=&quot;Accessibility, Form, and Content&quot;&gt;Accessibility, and Separating Form from Content&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This truly is a musing, in the sense that I wrote it on a whim. Eventually, it was presented at the &lt;a href=&quot;http://www.w3.org/2000/10/DIAWorkshop/statements.html&quot; title=&quot;W3C DIA Workshop - Position Statements and Papers&quot;&gt;W3C's October, 2000 workshop on web device independent authoring &lt;/a&gt;. Gregory Rosmaita presented it on my behalf (thanks again Gregory!).&lt;/p&gt;
&lt;p&gt;On the other hand, this is remarkably old news -- haven't you heard yet? If not, here are the main points of the message:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTML is not a formatting language.&lt;/li&gt;
&lt;li&gt;You should use style sheets to handle formatting.&lt;/li&gt;
&lt;li&gt;If you do, you will make your web pages more accessible.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://clown.idrc.ocad.ca/about/musings/Events/index.html&quot;&gt;Events&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This began as a presentation, on behalf of the ATRC, for one of its corporate partners. The partner wanted an explanation of user interface events and their role. I volunteered to talk about two event systems, namely Java's, and the Macintosh model (by now the Classic Macintosh). I started with the Java event system, and then decided that was enough.&lt;/p&gt;
&lt;p&gt;As I reached the end of my notes on Java events, I noticed a new theme emerging. That theme was that even though events, such as mouse clicks, key presses, and so on, are triggers for some change in the user interface, there is almost always a function that the event calls upon to effect the change. At least this appears to be the case with respect to Java.&lt;/p&gt;
&lt;p&gt;I think this is terribly important from the point of view of accessibility. In the past, and even today in some cases, adaptive technology achieves its goals by simulating events. To be concrete: if users save a document by typing &quot;control-s&quot;, then the adaptive technology achieves the same result by simulating the control-s key press. To be even more concrete: suppose the user employs a voice recognition system as their adaptive technology. The user intones &quot;save document&quot;, and the voice recognition device turns around and simulates the appropriate key press so that save-document functionality is engaged in the word processor it is controlling.&lt;/p&gt;
&lt;p&gt;This is silly -- if the point is to save a document, then invoke the application's save function. Similarly, for other functions of the application. Now, this is not the fault of people who develop adaptive technology. It has worked this way, because, in general, it had to. There was no direct access to an application's functionality.&lt;/p&gt;
&lt;p&gt;This is improving -- witness the Java platform. From a distance, you can think of adaptive technology as a kind of scripting. If applications published their capabilities for outside agents to use, then the agents can direct the application through means other than a mouse and keyboard. The agents no longer simulate events to manage the application. They simply tell the application what to do.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Copyright Â© 2002 Adaptive Technology Resource Centre, University of Toronto.&lt;br /&gt;Verbatim copying and distribution of this entire article is permitted in any medium, provided this notice is preserved.&lt;/p&gt;</content>
		<category term="Joseph" />
	</entry>
</feed>
